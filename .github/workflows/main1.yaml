name: Cherry-pick with PR on Conflict Latest

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch to cherry-pick from'
        required: true
        default: 'feature-branch'
      target_branch:
        description: 'Branch to cherry-pick to'
        required: true
        default: 'main'
      commit_shas:
        description: 'Space-separated list of commit SHAs to cherry-pick'
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  cherry-pick:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Fetch all branches
      run: git fetch origin

    - name: Checkout target branch
      run: |
        git checkout ${{ github.event.inputs.target_branch }}
        git pull origin ${{ github.event.inputs.target_branch }}

    - name: Cherry-pick commits
      id: cherry
      run: |
        CONFLICT=false
        for sha in ${{ github.event.inputs.commit_shas }}; do
          echo "üîß Attempting to cherry-pick $sha"
          if ! git cherry-pick $sha; then
            echo "‚ùå Conflict detected on commit $sha"
            echo "CONFLICTED_SHA=$sha" >> $GITHUB_ENV
            echo "CONFLICT=true" >> $GITHUB_ENV
            CONFLICT=true
            break
          fi
        done

        if [ "$CONFLICT" = false ]; then
          echo "‚úÖ All commits cherry-picked successfully"
          echo "CHERRY_SUCCESS=true" >> $GITHUB_ENV
        fi

    - name: Push cherry-picked changes to target branch
      if: env.CHERRY_SUCCESS == 'true'
      run: |
        git push origin ${{ github.event.inputs.target_branch }}
        echo "‚úÖ Changes pushed to ${{ github.event.inputs.target_branch }}"

    - name: Create new branch with conflicted cherry-pick
      if: env.CONFLICT == 'true'
      run: |
        TIMESTAMP=$(date +%s)
        CONFLICT_BRANCH=cherry-pick-${{ env.CONFLICTED_SHA }}-$TIMESTAMP
        echo "BRANCH_NAME=$CONFLICT_BRANCH" >> $GITHUB_ENV

        git cherry-pick --abort
        git checkout -b "$CONFLICT_BRANCH" origin/${{ github.event.inputs.target_branch }}

        echo "üîÅ Re-attempting cherry-pick ${{ env.CONFLICTED_SHA }} on new branch"
        git cherry-pick ${{ env.CONFLICTED_SHA }} || echo "üß® Conflict expected, committing conflict state"

        git add -u
        git commit -m "‚ö†Ô∏è Conflict during cherry-pick of ${{ env.CONFLICTED_SHA }} - manual resolution required"
        git push origin "$CONFLICT_BRANCH"

    - name: Create pull request for conflict resolution
      if: env.CONFLICT == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ env.BRANCH_NAME }}
        base: ${{ github.event.inputs.target_branch }}
        title: "üß© Cherry-pick conflict on ${{ env.CONFLICTED_SHA }}"
        body: |
          ‚ö†Ô∏è A conflict occurred while cherry-picking commit `${{ env.CONFLICTED_SHA }}` into `${{ github.event.inputs.target_branch }}`.

          This PR contains the conflict. Please resolve it manually and merge.
