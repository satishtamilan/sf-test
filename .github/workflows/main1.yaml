name: Cherry Pick Workflow

on:
  # Triggered manually with inputs
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'Commit hash to cherry-pick'
        required: true
      source_branch:
        description: 'Source branch (where the commit is located)'
        required: true
      target_branch:
        description: 'Target branch (where to cherry-pick to)'
        required: true
      pr_title:
        description: 'PR title (for conflict resolution)'
        required: true
        default: 'Cherry-pick with conflicts'
      pr_body:
        description: 'PR body (for conflict resolution)'
        required: false
        default: 'This PR was created automatically to resolve cherry-pick conflicts'

jobs:
  cherry_pick:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set Git user
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          
      - name: Setup branch
        run: |
          # Checkout the target branch
          git checkout ${{ github.event.inputs.target_branch }}
          git pull origin ${{ github.event.inputs.target_branch }}
          
      - name: Attempt Cherry Pick
        id: cherry_pick
        run: |
          # Try to cherry-pick
          if git cherry-pick ${{ github.event.inputs.commit_hash }}; then
            echo "Cherry-pick successful. Pushing changes..."
            git push origin ${{ github.event.inputs.target_branch }}
            echo "cherry_pick_status=success" >> $GITHUB_OUTPUT
          else
            echo "Cherry-pick encountered conflicts. Will create PR..."
            # Abort the cherry-pick that's in conflict
            git cherry-pick --abort
            echo "cherry_pick_status=conflict" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true
        
      - name: Handle Conflicts with PR
        if: steps.cherry_pick.outputs.cherry_pick_status == 'conflict'
        run: |
          # Create a new branch for the conflicted cherry-pick
          CONFLICT_BRANCH="cherry-pick-${{ github.event.inputs.commit_hash }}-to-${{ github.event.inputs.target_branch }}"
          git checkout -b $CONFLICT_BRANCH ${{ github.event.inputs.target_branch }}
          
          # Try cherry-pick but with --no-commit to handle conflicts later
          if ! git cherry-pick --no-commit ${{ github.event.inputs.commit_hash }}; then
            echo "Cherry-pick has conflicts. Creating branch with conflicts..."
            
            # Add all files including those with conflicts
            git add .
            
            # Create a commit with conflicts marked in files
            git commit -m "Cherry-pick ${{ github.event.inputs.commit_hash }} with conflicts"
            
            # Push the branch with conflicts
            git push origin $CONFLICT_BRANCH
            
            # Create PR using GitHub CLI
            gh pr create \
              --base ${{ github.event.inputs.target_branch }} \
              --head $CONFLICT_BRANCH \
              --title "${{ github.event.inputs.pr_title }}" \
              --body "${{ github.event.inputs.pr_body }}
              
              This PR contains cherry-pick of commit ${{ github.event.inputs.commit_hash }} from ${{ github.event.inputs.source_branch }} to ${{ github.event.inputs.target_branch }}.
              
              The cherry-pick operation resulted in conflicts that need manual resolution."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          if [ "${{ steps.cherry_pick.outputs.cherry_pick_status }}" == "success" ]; then
            echo "✅ Cherry-pick completed successfully and pushed to ${{ github.event.inputs.target_branch }}"
          else
            echo "⚠️ Cherry-pick had conflicts. Created PR for manual resolution."
          fi
